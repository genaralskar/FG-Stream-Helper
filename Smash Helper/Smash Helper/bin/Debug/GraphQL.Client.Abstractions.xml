<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GraphQL.Client.Abstractions</name>
    </assembly>
    <members>
        <member name="M:GraphQL.Client.Abstractions.IGraphQLClient.CreateSubscriptionStream``1(GraphQL.GraphQLRequest)">
            <summary>
            Creates a subscription to a GraphQL server. The connection is not established until the first actual subscription is made.<br/>
            All subscriptions made to this stream share the same hot observable.<br/>
            The stream must be recreated completely after an error has occured within its logic (i.e. a <see cref="T:System.Net.WebSockets.WebSocketException"/>)
            </summary>
            <param name="request">the GraphQL request for this subscription</param>
            <returns>an observable stream for the specified subscription</returns>
        </member>
        <member name="M:GraphQL.Client.Abstractions.IGraphQLClient.CreateSubscriptionStream``1(GraphQL.GraphQLRequest,System.Action{System.Exception})">
            <summary>
            Creates a subscription to a GraphQL server. The connection is not established until the first actual subscription is made.<br/>
            All subscriptions made to this stream share the same hot observable.<br/>
            All <see cref="T:System.Exception"/>s are passed to the <paramref name="exceptionHandler"/> to be handled externally.<br/>
            If the <paramref name="exceptionHandler"/> completes normally, the subscription is recreated with a new connection attempt.<br/>
            Any exception thrown by <paramref name="exceptionHandler"/> will cause the sequence to fail.
            </summary>
            <param name="request">the GraphQL request for this subscription</param>
            <param name="exceptionHandler">an external handler for all <see cref="T:System.Exception"/>s occurring within the sequence</param>
            <returns>an observable stream for the specified subscription</returns>
        </member>
    </members>
</doc>
